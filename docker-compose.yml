# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.


version: '3.4'

services:
  
  # --------------------------
  # Banco de dados dos servi√ßos
  # --------------------------
  db-services:
    container_name: container-db-services
    image: mysql
    restart: always
    environment:
      MYSQL_PASSWORD: "root"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
    - 3306:3306
    volumes:
      - db-services:/var/lib/mysql
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    volumes:
      - "db-data-kong-postgres:/var/lib/postgresql/data"

  kong-migrations:
    image: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    restart: on-failure
    depends_on:
      - kong-database

  kong:
    image: kong
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: on-failure
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-database:kong-database
    depends_on:
      - kong-migrations

  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    environment:
      - NODE_ENV=production
    

  icarusestoque:
    container_name: container-estoque
    image: icarusestoque
    build:
      context: .
      dockerfile: icarus.estoque/Dockerfile
    ports:
      - 5081:5081
    depends_on:
      - db-services

  icarusprojetos:
    container_name: container-projetos
    image: icarusprojetos
    build:
      context: .
      dockerfile: icarus.projetos/Dockerfile
    ports:
      - 5222:5222
    depends_on:
      - db-services

  icarusgateway:
    container_name: container-gateway
    image: icarusgateway
    build:
      context: .
      dockerfile: icarus.gateway/Dockerfile
    ports:
      - 5074:5074
    depends_on:
      - icarusestoque
      - icarusprojetos
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: container-broker
    environment:
    - RABBITMQ_DEFAULT_USER=admin
    - RABBITMQ_DEFAULT_PASS=admin
    ports:
        - 5672:5672
        - 15672:15672
  icarusjwt:
    image: icarus-auth
    container_name: container-auth
    build:
      context: .
      dockerfile: icarus.jwtManager/Dockerfile
    ports:
      - 5057:5057
volumes:
  db-services:
  db-data-kong-postgres:

networks:
    default:
        external:
            name: kong-ne